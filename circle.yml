general:
  branches:
    ignore:
      - /wip.*/

machine:
  timezone:
    Asia/Tokyo
  php:
    version: 5.5.21
  ruby:
    version: 2.0.0

dependencies:
  cache_directories:
    - ~/cache
    - ~/project-ci

  pre:
    #base
    - sudo apt-get update
    - sudo apt-get install -y gcc libpcre3-dev nginx

    #php
    - |
      mkdir -p ~/cache/php/extensions
      if [ -e ~/cache/php/extensions/phalcon.so ]; then
        sudo cp ~/cache/php/extensions/phalcon.so /home/ubuntu/.phpenv/versions/5.5.21/lib/php/extensions/no-debug-non-zts-20121212/
      else
        cd ~ && git clone git@github.com:phalcon/cphalcon.git
        sed -i "s/phpize /\/home\/ubuntu\/.phpenv\/shims\/phpize /g" ~/cphalcon/build/install
        sed -i "s/configure /configure --with-php-config=\/home\/ubuntu\/.phpenv\/shims\/php-config /g" ~/cphalcon/build/install
        cd ~/cphalcon/build && sudo ./install
        sudo cp /home/ubuntu/.phpenv/versions/5.5.21/lib/php/extensions/no-debug-non-zts-20121212/phalcon.so ~/cache/php/extensions/
      fi
    - sudo sh -c "echo 'extension=phalcon.so' > /home/ubuntu/.phpenv/versions/5.5.21/etc/conf.d/phalcon.ini"

    #memcached
    - cd ~ && wget https://pecl.php.net/get/memcached-2.2.0.tgz && tar -zxvf memcached-2.2.0.tgz
    - cd ~/memcached-2.2.0 && phpize && ./configure --disable-memcached-sasl && make && make install
    - sudo sh -c "echo 'extension=memcached.so' > /home/ubuntu/.phpenv/versions/5.5.21/etc/conf.d/memcached.ini"
    - sudo sh -c "echo 'pdo_mysql.default_socket = /var/run/mysqld/mysqld.sock' > /home/ubuntu/.phpenv/versions/5.5.21/etc/conf.d/pdo.ini"
    - sudo sh -c "echo 'short_open_tag = On' > /home/ubuntu/.phpenv/versions/5.5.21/etc/conf.d/short.ini"

    #memcached
    - cd ~ && wget https://pecl.php.net/get/memcached-2.2.0.tgz && tar -zxvf memcached-2.2.0.tgz
    - cd ~/memcached-2.2.0 && phpize && ./configure --disable-memcached-sasl && make && make install
    - sudo sh -c "echo 'extension=memcached.so' > /home/ubuntu/.phpenv/versions/5.5.21/etc/conf.d/memcached.ini"

    #apcu
    - cd ~ && wget https://pecl.php.net/get/apcu-4.0.11.tgz && tar -zxvf apcu-4.0.11.tgz
    - cd ~/apcu-4.0.11 && phpize && ./configure && make && make install
    - cd ~/yotsuya-treasure-site/circle && cp apcu.ini /home/ubuntu/.phpenv/versions/5.5.21/etc/conf.d/apcu.ini

    # other extentions
    - sudo sh -c "echo 'pdo_mysql.default_socket = /var/run/mysqld/mysqld.sock' > /home/ubuntu/.phpenv/versions/5.5.21/etc/conf.d/pdo.ini"
    - sudo sh -c "echo 'short_open_tag = On' > /home/ubuntu/.phpenv/versions/5.5.21/etc/conf.d/short.ini"


    #project-ci
    - |
      if [ ! -e ~/project-ci ]; then
        cd ~ && git clone git@bitbucket.org:gochipon/project-ci.git
      fi
      cd ~/project-ci && ./bin/initialize.sh

    #platform-api
    - |
      cd ~ && rm -fR platform-api && git clone git@github.com:gochipon/platform-api.git
      cd ~/platform-api
      git checkout -b v2 origin/v2
      cp -a config/config.d/config.php.sample config/config.d/config.php
      cp -a config/config.d/database.php.sample config/config.d/database.php
      make
      ./bin/gpl-task database generateClass
      make test

    #cucumber apiテスト用
    - |
      rvm use ruby-2.0.0
      gem install cucumber
      gem install cucumber-api

    #yotsuya-treasure-site
    - |
      cd ~/yotsuya-treasure-site
      cp -a config/config.d/config.php.sample config/config.d/config.php
      cp -a config/config.d/database.php.sample config/config.d/database.php
      cp -a app/v1/config/config.d/config.php.sample app/v1/config/config.d/config.php
      make
      ./bin/gpl-task database generateClass

    #nginx
    - |
      sudo rm /etc/nginx/nginx.conf
      cd ~/yotsuya-treasure-site/circle && sudo cp nginx.conf /etc/nginx/nginx.conf
      sudo service nginx restart

    #php-fpm
    - cd ~/.phpenv/versions/5.5.21/etc/ && mv php-fpm.conf.default php-fpm.conf && ~/.phpenv/versions/5.5.21/sbin/php-fpm

test:
  override:
    - cd ~/yotsuya-treasure-site && make check
    - sudo service memcached restart
    - make test && cucumber DOMAIN=http://localhost/v1/
